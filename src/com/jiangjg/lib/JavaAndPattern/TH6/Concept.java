package com.jiangjg.lib.JavaAndPattern.TH6;

public class Concept {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		/*抽象类可以有实例变量, 但是不可以实例化; 可以有一个或多个构造子, 但是不可以被用来创建实例; 
		 * 构造子可以被其子类调用, 从而使所有的子类可以有一些共有的实现, 抽象类和子类的这种关系实际上就是模板方法模式的应用
		 * 抽象类一定是用来继承的; 具体类不是用来继承的
		 * 抽象类应该拥有尽可能多的共同代码; 抽象类应该拥有尽可能少的数据
		 * 什么情况下应该使用继承：
		 * 	1.子类是超类的一个特殊种类, 而不是超类的一个角色
		 * 	2.永远不会出现需要将子类换成另一个类的子类情况
		 * 	3.子类具体扩展超类的责任, 而不是具有Override超类的责任
		 * 	4.只有在分类学角度上有意义时,才可以使用继承, 不要从工具类继承
		 */

	}

}
